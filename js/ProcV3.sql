AS
BEGIN
SET NOCOUNT ON;


/* Création des index pour les recherches */
IF NOT EXISTS (SELECT 1 FROM SYS.INDEXES I WHERE I.NAME = 'IDX_DATALOAD_CONTACT_CONNECT_CLIEMAI')
BEGIN
    CREATE INDEX IDX_DATALOAD_CONTACT_CONNECT_CLIEMAI ON DATALOAD_CONTACT_CONNECT(CLIEMAI)
END
IF NOT EXISTS (SELECT 1 FROM SYS.INDEXES I WHERE I.NAME = 'IDX_DATALOAD_CONTACT_COM_EMAIL')
BEGIN
    CREATE INDEX IDX_DATALOAD_CONTACT_COM_EMAIL ON DATALOAD_CONTACT_COM(EMAIL)
END

/* Gestion des rejets sur DATALOAD - Champs vides */
UPDATE TGT SET 
OPTI_REJECTED = CASE 
WHEN EMAIL IS NULL OR DCC.CLIEMAI IS NULL THEN 1
ELSE 0
END
, OPTI_REJECTED_REASON = CASE 
WHEN EMAIL IS NULL THEN 'Champs vides'
WHEN DCC.CLIEMAI IS NULL THEN 'Présence Connect'
ELSE ''
END
FROM DATALOAD_CONTACT_COM AS TGT
LEFT JOIN DATALOAD_CONTACT_CONNECT AS DCC WITH(NOLOCK) 
ON DCC.CLIEMAI = TGT.EMAIL;


/* Exécution de la requête pour alimenter la table TEMP */
INSERT INTO TEMP_CONTACT (
CPRE, 
CNOM, 
CEMA, 
CB1TYPMAN, 
CB1PHO, 
CB1CP, 
CB1VIL, 
CB1NBCHA, 
CB1NBPIE, 
CB1PRI, 
CB1SUR, 
CB1TYPBIE, 
CB1URL, 
CB2TYPMAN, 
CB2PHO, 
CB2CP, 
CB2VIL, 
CB2NBCHA, 
CB2NBPIE, 
CB2PRI, 
CB2SUR, 
CB2TYPBIE, 
CB2URL, 
CSOURCE
) 
SELECT 
source.PRENOM, 
source.NOM, 
source.EMAIL, 
source.TYPEMANDAT1, 
source.IMAGE1, 
source.CP1, 
source.VILLE1, 
source.NBCHAMBRE1, 
source.NBPIECE1, 
source.PRIX1, 
source.SURFACE1, 
source.TYPE1, 
source.URL1, 
source.TYPEMANDAT2, 
source.IMAGE2, 
source.CP2, 
source.VILLE2, 
source.NBCHAMBRE2, 
source.NBPIECE2, 
source.PRIX2, 
source.SURFACE2, 
source.TYPE2, 
source.URL2,
'COM'
FROM DATALOAD_CONTACT_COM source WITH(NOLOCK)
WHERE OPTI_REJECTED = 0;

/* Gestion des doublons */
WITH DOUBLES (RN, DOUBLONS)
AS
( 
SELECT ROW_NUMBER() OVER (PARTITION BY CEMA ORDER BY CEMA DESC) AS RN,DOUBLONS
FROM TEMP_CONTACT
)
UPDATE DOUBLES
SET DOUBLONS = 'Y'
WHERE RN > 1;

/* Vider les données Agence pour le doublon Connect conservé */
CREATE NONCLUSTERED INDEX IDX_INC_DOUBLONS
ON [dbo].[TEMP_CONTACT] ([DOUBLONS])
INCLUDE ([LINENUMBER],[CEMA]);

UPDATE TEMP_CONTACT 
SET CAGEIMA = NULL,
CAGENOM = NULL,
CAGEAD1 = NULL,
CAGEAD2 = NULL,
CAGECP = NULL,
CAGEVIL = NULL,
CAGETEL = NULL,
CAGEFAX = NULL,
CAGEEMA = NULL,
CAGEHOR = NULL,
CAGEJOU = NULL,
CAGEURL = NULL,
CAGECOD = NULL
WHERE EXISTS (SELECT 1 FROM TEMP_CONTACT A WHERE CEMA = A.CEMA AND A.DOUBLONS = 'Y')
AND DOUBLONS = NULL
AND CSOURCE = 'COM';

/* Mise à jour de la colonne MAID pour les données de TEMP à mettre à jour */
CREATE NONCLUSTERED INDEX IDX_MAID
ON [dbo].[TEMP_CONTACT] ([MAID]);

UPDATE TC
SET TC.MAID = UC.ID,
TC.TRAITEMENT = 'U'
FROM TEMP_CONTACT AS TC
INNER JOIN USERS_CONTACT AS UC
ON TC.CEMA = UC.MAIL
WHERE TC.DOUBLONS is null;

/* Pour toutes les données à mettre à jour : mise à jour de CONTACT */
UPDATE UC
SET UC.CIVILITE = ISNULL(TC.CCIV, UC.CIVILITE),
UC.PRENOM = ISNULL(TC.CPRE, UC.PRENOM),
UC.NOM = ISNULL(TC.CNOM, UC.NOM),
UC.MODIFIED_DT = GETDATE(),
UC.NAME = UC.PRENOM+' '+UC.NOM
FROM USERS_CONTACT AS UC
INNER JOIN TEMP_CONTACT AS TC
ON UC.ID = TC.MAID;

/* Pour toutes les données à mettre à jour : mise à jour de BIENS */
UPDATE DB
SET DB.B1_TYPEMANDAT = TC.CB1TYPMAN,
DB.B1_PHOTO = TC.CB1PHO,
DB.B1_CODEPOSTAL = TC.CB1CP,
DB.B1_VILLE = TC.CB1VIL,
DB.B1_NBCHAMBRES = TC.CB1NBCHA,
DB.B1_NBPIECES = TC.CB1NBPIE,
DB.B1_PRIX = TC.CB1PRI,
DB.B1_SURFACE = TC.CB1SUR,
DB.B1_TYPE = TC.CB1TYPBIE,
DB.B1_URL = TC.CB1URL,
DB.B2_TYPEMANDAT = TC.CB2TYPMAN,
DB.B2_PHOTO = TC.CB2PHO,
DB.B2_CODEPOSTAL = TC.CB2CP,
DB.B2_VILLE = TC.CB2VIL,
DB.B2_NBCHAMBRES = TC.CB2NBCHA,
DB.B2_NBPIECES = TC.CB2NBPIE,
DB.B2_PRIX = TC.CB2PRI,
DB.B2_SURFACE = TC.CB2SUR,
DB.B2_TYPE = TC.CB2TYPBIE,
DB.B2_URL = TC.CB2URL
FROM DATA_BIENS_2 AS DB
INNER JOIN TEMP_CONTACT AS TC
ON DB.ID_CONTACT = TC.MAID;

/* Pour toutes les données à mettre à jour : mise à jour de AGENCE */
UPDATE DA
SET DA.PHOTO = TC.CAGEIMA,
DA.NOM = TC.CAGENOM,
DA.ADRESSE1 = TC.CAGEAD1,
DA.ADRESSE2 = TC.CAGEAD2,
DA.CODEPOSTAL = TC.CAGECP,
DA.VILLE = TC.CAGEVIL,
DA.TEL = TC.CAGETEL,
DA.FAX = TC.CAGEFAX,
DA.EMAIL = TC.CAGEEMA,
DA.HORAIRES = TC.CAGEHOR,
DA.JOURS = TC.CAGEJOU,
DA.URL = TC.CAGEURL,
DA.CODEAGENCE = TC.CAGECOD
FROM DATA_AGENCE_2 AS DA
INNER JOIN TEMP_CONTACT AS TC
ON DA.ID_CONTACT = TC.MAID;


/*Mise à jour des optins*/

UPDATE DCO SET
DCO.DATALOAD_OPTIN = CASE WHEN ( EXISTS(SELECT 1 FROM TEMP_CONTACT WHERE CEMA = UC.MAIL AND UC.ID = DCO.ID_CONTACT AND TRAITEMENT = 'U' )) THEN 1 END,
DCO.NL_OPTIN = CASE WHEN DCO.DATALOAD_OPTIN = 0 then 0 END,
DCO.ORPI_OPTIN = CASE WHEN TC.TRAITEMENT = 'U' AND TC.CSOURCE = 'COM' THEN 1 END
FROM DATA_CONTACT_OPTIN AS DCO
INNER JOIN TEMP_CONTACT AS TC
ON DCO.ID_CONTACT = TC.MAID
INNER JOIN USERS_CONTACT AS UC WITH(NOLOCK)
ON DCO.ID_CONTACT = UC.ID


/* Pour les données à créer : création dans CONTACT */
CREATE NONCLUSTERED INDEX IDX_MAIL
ON [dbo].[USERS_CONTACT] ([MAIL]);

INSERT INTO USERS_CONTACT(MAIL, CIVILITE, PRENOM, NOM, NAME, CREATED_DT, MODIFIED_DT)
SELECT source.CEMA, source.CCIV, source.CPRE, source.CNOM, source.CPRE+' '+source.CNOM, GETDATE(), GETDATE()
FROM TEMP_CONTACT source WITH(NOLOCK)
WHERE source.DOUBLONS is null
AND source.MAID is null;

/* Mise à jour de la colonne MAID pour les données de TEMP nouvellement créées */
UPDATE TC
SET TC.MAID = UC.ID
FROM TEMP_CONTACT AS TC
INNER JOIN USERS_CONTACT AS UC
ON TC.CEMA = UC.MAIL
WHERE TC.DOUBLONS is null
AND TC.MAID is null;

/* Pour toutes les données à créer : création de OPTIN */
INSERT INTO DATA_CONTACT_OPTIN(ID_CONTACT, NL_OPTIN, ORPI_OPTIN)
SELECT source.MAID, 1, CASE WHEN source.CSOURCE = 'COM' THEN 1 ELSE 0 END
FROM TEMP_CONTACT source WITH(NOLOCK)
WHERE source.DOUBLONS is null
AND source.TRAITEMENT is null;

/* Pour toutes les données à créer : création de SEGMENTATION */
INSERT INTO DATA_DATA_CONTACT_SEGMENTATION(ID_CONTACT)
SELECT source.MAID
FROM TEMP_CONTACT source WITH(NOLOCK)
WHERE source.DOUBLONS is null
AND source.TRAITEMENT is null;

/* Pour toutes les données à créer : création de BIENS */
INSERT INTO DATA_BIENS_2(ID_CONTACT, B1_TYPEMANDAT, B1_PHOTO, B1_CODEPOSTAL, B1_VILLE, B1_NBCHAMBRES, B1_NBPIECES, B1_PRIX, B1_SURFACE, B1_TYPE, B1_URL, B2_TYPEMANDAT, B2_PHOTO, B2_CODEPOSTAL, B2_VILLE, B2_NBCHAMBRES, B2_NBPIECES, B2_PRIX, B2_SURFACE, B2_TYPE, B2_URL)
SELECT source.MAID, source.CB1TYPMAN, source.CB1PHO, source.CB1CP, source.CB1VIL, source.CB1NBCHA, source.CB1NBPIE, source.CB1PRI, source.CB1SUR, source.CB1TYPBIE, source.CB1URL, source.CB2TYPMAN, source.CB2PHO, source.CB2CP, source.CB2VIL, source.CB2NBCHA, source.CB2NBPIE, source.CB2PRI, source.CB2SUR, source.CB2TYPBIE, source.CB2URL
FROM TEMP_CONTACT source WITH(NOLOCK)
WHERE source.DOUBLONS is null
AND source.TRAITEMENT is null;

/* Pour toutes les données à mettre à créer : création de AGENCE */
INSERT INTO DATA_AGENCE_2(ID_CONTACT, PHOTO, NOM, ADRESSE1, ADRESSE2, CODEPOSTAL, VILLE, TEL, FAX, EMAIL, HORAIRES, JOURS, URL, CODEAGENCE)
SELECT source.MAID, source.CAGEIMA, source.CAGENOM, source.CAGEAD1, source.CAGEAD2, source.CAGECP, source.CAGEVIL, source.CAGETEL, source.CAGEFAX, source.CAGEEMA, source.CAGEHOR, source.CAGEJOU, source.CAGEURL, source.CAGECOD
FROM TEMP_CONTACT source WITH(NOLOCK)
WHERE source.DOUBLONS is null
AND source.TRAITEMENT is null
AND source.CSOURCE = 'COM';

END